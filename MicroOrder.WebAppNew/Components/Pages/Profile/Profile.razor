@page "/profile"
@using Microsoft.AspNetCore.Authorization;
@using System.IdentityModel.Tokens.Jwt;
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]
<style>
    .title {
    font-weight: bold;
    color: black;
    border: 1px solid #ccc;
    text-align: right;
    overflow: hidden;
    }

    .value {
    color: #123ab8;
    border: 1px solid #ccc;
    overflow: hidden;
    }

    h3 {
    background-color: #cd37c3;
    color: white;
    }

    textarea {
    width: 100%;
    }
</style>

<div class="row">
    <div class="col-12">
        <a class="btn btn-primary" asp-page="/Profile/Logout">LogOut</a>
    </div>
    <div class="col-4 px-1">
        <h3>@AccessToken.Name</h3>
        <div>
            <p>
                <textarea rows="10" asp-for="@AccessToken.Token"></textarea>
            </p>
        </div>
        @foreach (var claim in AccessToken.Claims)
        {
            <div class="container">
                <div class="row">
                    <div class="col-3 title" title="@claim.Type">@claim.Type</div>
                    <div class="col-9 value" title="@claim.Value">@claim.Value</div>
                </div>
            </div>
        }
    </div>
    <div class="col-4 px-1">
        <h3>@IdToken.Name</h3>
        <div>
            <p>
                <textarea rows="10" asp-for="@IdToken.Token"></textarea>
            </p>
        </div>
        @foreach (var claim in IdToken.Claims)
        {
            <div class="container">
                <div class="row">
                    <div class="col-3 title" title="@claim.Type">@claim.Type</div>
                    <div class="col-9 value" title="@claim.Value">@claim.Value</div>
                </div>
            </div>
        }
    </div>
    <div class="col-4 px-1">
        <h3>@UserClaims.Name</h3>
        <div>
            <p>
                <textarea rows="10" asp-for="@UserClaims.Token"></textarea>
            </p>
        </div>
        @foreach (var claim in UserClaims.Claims)
        {
            <div class="container">
                <div class="row">
                    <div class="col-3 title" title="@claim.Type">@claim.Type</div>
                    <div class="col-9 value" title="@claim.Value">@claim.Value</div>
                </div>
            </div>
        }
    </div>
</div>
@code {
    private TokenViewModel IdToken { get; set; } = new();
    private TokenViewModel AccessToken { get; set; } = new();
    private TokenViewModel UserClaims { get; set; } = new();

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var tokenHandler = new JwtSecurityTokenHandler();

        // var idToken = await HttpContext.GetTokenAsync("id_token");
        // var accessToken = await HttpContext.GetTokenAsync("access_token");

        // IdToken.Name = "id_token";
        // IdToken.Token = idToken ?? string.Empty;
        // IdToken.Claims = [.. tokenHandler.ReadJwtToken(idToken).Claims];

        // AccessToken.Name = "access_token";
        // AccessToken.Token = accessToken ?? string.Empty;
        // AccessToken.Claims = [.. tokenHandler.ReadJwtToken(accessToken).Claims];

        UserClaims.Name = "user_claims";
        UserClaims.Claims = [.. user.Claims];
    }
}
